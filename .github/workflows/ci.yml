name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Compilación, Pruebas y Análisis SonarQube
    runs-on: ubuntu-latest


    steps:
    - name: Instalar ChromeDriver
      run: sudo apt-get install -y chromium-chromedriver

    - name: Checkout del código
      uses: actions/checkout@v3

    - name: Configuración de Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
      
    - name: Instalar Chrome
      run: |
        sudo apt-get update
        sudo apt-get install -y wget unzip xvfb
        wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
        sudo apt install -y ./google-chrome-stable_current_amd64.deb

    - name: Configurar ChromeDriver
      run: |
        CHROME_VERSION=$(google-chrome --version | awk '{ print $3 }' | cut -d'.' -f1)
        wget https://chromedriver.storage.googleapis.com/$(curl -s https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION)/chromedriver_linux64.zip
        unzip chromedriver_linux64.zip
        sudo mv chromedriver /usr/local/bin/
        sudo chmod +x /usr/local/bin/chromedriver
    - name: Compilar el proyecto
      run: mvn -B package --file pom.xml

    - name: Ejecutar pruebas
      run: mvn test

    - name: Análisis con SonarQube (ngrok)
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn sonar:sonar \
             -Dsonar.projectKey=healthtrack \
             -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
             -Dsonar.login=$SONAR_TOKEN

